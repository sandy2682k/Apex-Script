*Create an Apex script to add record type in opportunity records if it doesn't have any record type
*we have 2 picklist values in field product families on the product2 object
  1. 'Coaching' & 2. 'Platform'
*if any opportunity contains records with products having a product family of 'Coaching' t then the record type will be added to 'Services_Opportunity'
*And if any opportunity contains records with products having product family of 'Platform' then the record type will be added to 'SaaS_Opportunity'

public class OpportunityRecordTypeUpdater {
    public static void updateOpportunityRecordTypes() {
        
        try {
            // Get the RecordType IDs for Services_Opportunity and SaaS_Opportunity Opportunity
            Id ServicestRecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByName().get('Services Opportunity').getRecordTypeId(); 
            // Retrieve the RecordType ID for the 'SaaS_Opportunity' record type for Opportunity object
            Id saasOpportunityRecordTypeId = Schema.SObjectType.Opportunity.getRecordTypeInfosByName().get('SaaS Opportunity').getRecordTypeId();
            List<Opportunity> opportunitiesToUpdate = new List<Opportunity>();
            
            // Get Opportunity records without RecordType & Opportunity product 
            for (Opportunity opp : [SELECT Id, (SELECT Id, PricebookEntry.Product2.Family FROM OpportunityLineItems where PricebookEntry.Product2.Family='Coaching' OR PricebookEntry.Product2.Family='Platform' Limit 200) FROM Opportunity WHERE RecordTypeId = NULL AND Opportunity.HasOpportunityLineItem = true ]) {
                Boolean isPlatform=false;
                Boolean isCoaching = false;
                for (OpportunityLineItem oli : opp.OpportunityLineItems) {
                    if (oli.PricebookEntry.Product2.Family == 'Platform') {
                        isPlatform=true;
                        
                    }if (oli.PricebookEntry.Product2.Family == 'Coaching'){
                        // Check if the OpportunityLineItem's Product Family is 'Coaching'
                        isCoaching = true;
                        
                    } 
                    
                }
                if(opp.OpportunityLineItems.size()>0){
                    if(isPlatform)
                        opp.RecordTypeId = saasOpportunityRecordTypeId;
                    else if(isCoaching )
                        opp.RecordTypeId = ServicestRecordTypeId;
                    
                    opportunitiesToUpdate.add(opp);
                }
                
            }                
            
            
            if(!opportunitiesToUpdate.isEmpty()){
                database.update(opportunitiesToUpdate, false); 
            }
        } catch (Exception ex) {
            // Handle exception
            System.debug('Exception caught: ' + ex.getMessage() + ' at line : ' + ex.getLineNumber());
        }
    }
}

